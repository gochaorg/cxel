package xyz.cofe.cxel.eval.op;

import xyz.cofe.cxel.Keyword;
import xyz.cofe.cxel.eval.FnName;

import java.util.Objects;

/**
 * Операции над целыми числами
 */
public class IntegerOperators {
    @FnName("+") public static int add( int a, byte b ){ return (int)(a + b); }
    @FnName("+") public static int add( int a, Byte b ){ return (int)(a + b); }
    @FnName("+") public static int add( int a, short b ){ return (int)(a + b); }
    @FnName("+") public static int add( int a, Short b ){ return (int)(a + b); }
    @FnName("+") public static int add( int a, int b ){ return (int)(a + b); }
    @FnName("+") public static Integer add( int a, Integer b ){ return (Integer)(a + b); }
    @FnName("+") public static long add( int a, long b ){ return (long)(a + b); }
    @FnName("+") public static Long add( int a, Long b ){ return (Long)(a + b); }
    @FnName("+") public static float add( int a, float b ){ return (float)(a + b); }
    @FnName("+") public static Float add( int a, Float b ){ return (Float)(a + b); }
    @FnName("+") public static double add( int a, double b ){ return (double)(a + b); }
    @FnName("+") public static Double add( int a, Double b ){ return (Double)(a + b); }
    @FnName("+") public static Integer add( Integer a, byte b ){ return (Integer)(a + b); }
    @FnName("+") public static Integer add( Integer a, Byte b ){ return (Integer)(a + b); }
    @FnName("+") public static Integer add( Integer a, short b ){ return (Integer)(a + b); }
    @FnName("+") public static Integer add( Integer a, Short b ){ return (Integer)(a + b); }
    @FnName("+") public static Integer add( Integer a, int b ){ return (Integer)(a + b); }
    @FnName("+") public static Integer add( Integer a, Integer b ){ return (Integer)(a + b); }
    @FnName("+") public static long add( Integer a, long b ){ return (long)(a + b); }
    @FnName("+") public static Long add( Integer a, Long b ){ return (Long)(a + b); }
    @FnName("+") public static float add( Integer a, float b ){ return (float)(a + b); }
    @FnName("+") public static Float add( Integer a, Float b ){ return (Float)(a + b); }
    @FnName("+") public static double add( Integer a, double b ){ return (double)(a + b); }
    @FnName("+") public static Double add( Integer a, Double b ){ return (Double)(a + b); }
    @FnName("-") public static int sub( int a, byte b ){ return (int)(a - b); }
    @FnName("-") public static int sub( int a, Byte b ){ return (int)(a - b); }
    @FnName("-") public static int sub( int a, short b ){ return (int)(a - b); }
    @FnName("-") public static int sub( int a, Short b ){ return (int)(a - b); }
    @FnName("-") public static int sub( int a, int b ){ return (int)(a - b); }
    @FnName("-") public static Integer sub( int a, Integer b ){ return (Integer)(a - b); }
    @FnName("-") public static long sub( int a, long b ){ return (long)(a - b); }
    @FnName("-") public static Long sub( int a, Long b ){ return (Long)(a - b); }
    @FnName("-") public static float sub( int a, float b ){ return (float)(a - b); }
    @FnName("-") public static Float sub( int a, Float b ){ return (Float)(a - b); }
    @FnName("-") public static double sub( int a, double b ){ return (double)(a - b); }
    @FnName("-") public static Double sub( int a, Double b ){ return (Double)(a - b); }
    @FnName("-") public static Integer sub( Integer a, byte b ){ return (Integer)(a - b); }
    @FnName("-") public static Integer sub( Integer a, Byte b ){ return (Integer)(a - b); }
    @FnName("-") public static Integer sub( Integer a, short b ){ return (Integer)(a - b); }
    @FnName("-") public static Integer sub( Integer a, Short b ){ return (Integer)(a - b); }
    @FnName("-") public static Integer sub( Integer a, int b ){ return (Integer)(a - b); }
    @FnName("-") public static Integer sub( Integer a, Integer b ){ return (Integer)(a - b); }
    @FnName("-") public static long sub( Integer a, long b ){ return (long)(a - b); }
    @FnName("-") public static Long sub( Integer a, Long b ){ return (Long)(a - b); }
    @FnName("-") public static float sub( Integer a, float b ){ return (float)(a - b); }
    @FnName("-") public static Float sub( Integer a, Float b ){ return (Float)(a - b); }
    @FnName("-") public static double sub( Integer a, double b ){ return (double)(a - b); }
    @FnName("-") public static Double sub( Integer a, Double b ){ return (Double)(a - b); }
    @FnName("*") public static int mul( int a, byte b ){ return (int)(a * b); }
    @FnName("*") public static int mul( int a, Byte b ){ return (int)(a * b); }
    @FnName("*") public static int mul( int a, short b ){ return (int)(a * b); }
    @FnName("*") public static int mul( int a, Short b ){ return (int)(a * b); }
    @FnName("*") public static int mul( int a, int b ){ return (int)(a * b); }
    @FnName("*") public static Integer mul( int a, Integer b ){ return (Integer)(a * b); }
    @FnName("*") public static long mul( int a, long b ){ return (long)(a * b); }
    @FnName("*") public static Long mul( int a, Long b ){ return (Long)(a * b); }
    @FnName("*") public static float mul( int a, float b ){ return (float)(a * b); }
    @FnName("*") public static Float mul( int a, Float b ){ return (Float)(a * b); }
    @FnName("*") public static double mul( int a, double b ){ return (double)(a * b); }
    @FnName("*") public static Double mul( int a, Double b ){ return (Double)(a * b); }
    @FnName("*") public static Integer mul( Integer a, byte b ){ return (Integer)(a * b); }
    @FnName("*") public static Integer mul( Integer a, Byte b ){ return (Integer)(a * b); }
    @FnName("*") public static Integer mul( Integer a, short b ){ return (Integer)(a * b); }
    @FnName("*") public static Integer mul( Integer a, Short b ){ return (Integer)(a * b); }
    @FnName("*") public static Integer mul( Integer a, int b ){ return (Integer)(a * b); }
    @FnName("*") public static Integer mul( Integer a, Integer b ){ return (Integer)(a * b); }
    @FnName("*") public static long mul( Integer a, long b ){ return (long)(a * b); }
    @FnName("*") public static Long mul( Integer a, Long b ){ return (Long)(a * b); }
    @FnName("*") public static float mul( Integer a, float b ){ return (float)(a * b); }
    @FnName("*") public static Float mul( Integer a, Float b ){ return (Float)(a * b); }
    @FnName("*") public static double mul( Integer a, double b ){ return (double)(a * b); }
    @FnName("*") public static Double mul( Integer a, Double b ){ return (Double)(a * b); }
    @FnName("/") public static int div( int a, byte b ){ return (int)(a / b); }
    @FnName("/") public static int div( int a, Byte b ){ return (int)(a / b); }
    @FnName("/") public static int div( int a, short b ){ return (int)(a / b); }
    @FnName("/") public static int div( int a, Short b ){ return (int)(a / b); }
    @FnName("/") public static int div( int a, int b ){ return (int)(a / b); }
    @FnName("/") public static Integer div( int a, Integer b ){ return (Integer)(a / b); }
    @FnName("/") public static long div( int a, long b ){ return (long)(a / b); }
    @FnName("/") public static Long div( int a, Long b ){ return (Long)(a / b); }
    @FnName("/") public static float div( int a, float b ){ return (float)(a / b); }
    @FnName("/") public static Float div( int a, Float b ){ return (Float)(a / b); }
    @FnName("/") public static double div( int a, double b ){ return (double)(a / b); }
    @FnName("/") public static Double div( int a, Double b ){ return (Double)(a / b); }
    @FnName("/") public static Integer div( Integer a, byte b ){ return (Integer)(a / b); }
    @FnName("/") public static Integer div( Integer a, Byte b ){ return (Integer)(a / b); }
    @FnName("/") public static Integer div( Integer a, short b ){ return (Integer)(a / b); }
    @FnName("/") public static Integer div( Integer a, Short b ){ return (Integer)(a / b); }
    @FnName("/") public static Integer div( Integer a, int b ){ return (Integer)(a / b); }
    @FnName("/") public static Integer div( Integer a, Integer b ){ return (Integer)(a / b); }
    @FnName("/") public static long div( Integer a, long b ){ return (long)(a / b); }
    @FnName("/") public static Long div( Integer a, Long b ){ return (Long)(a / b); }
    @FnName("/") public static float div( Integer a, float b ){ return (float)(a / b); }
    @FnName("/") public static Float div( Integer a, Float b ){ return (Float)(a / b); }
    @FnName("/") public static double div( Integer a, double b ){ return (double)(a / b); }
    @FnName("/") public static Double div( Integer a, Double b ){ return (Double)(a / b); }

    @FnName("<") public static Boolean less( Integer a, byte b ){ return a < b; }
    @FnName("<") public static Boolean less( Integer a, Byte b ){ return a < b; }
    @FnName("<") public static Boolean less( Integer a, short b ){ return a < b; }
    @FnName("<") public static Boolean less( Integer a, Short b ){ return a < b; }
    @FnName("<") public static Boolean less( Integer a, int b ){ return a < b; }
    @FnName("<") public static Boolean less( Integer a, Integer b ){ return a < b; }
    @FnName("<") public static Boolean less( Integer a, long b ){ return a < b; }
    @FnName("<") public static Boolean less( Integer a, Long b ){ return a < b; }
    @FnName("<") public static Boolean less( Integer a, float b ){ return a < b; }
    @FnName("<") public static Boolean less( Integer a, Float b ){ return a < b; }
    @FnName("<") public static Boolean less( Integer a, double b ){ return a < b; }
    @FnName("<") public static Boolean less( Integer a, Double b ){ return a < b; }
    @FnName("<=") public static Boolean eqOrLess( Integer a, byte b ){ return a <= b; }
    @FnName("<=") public static Boolean eqOrLess( Integer a, Byte b ){ return a <= b; }
    @FnName("<=") public static Boolean eqOrLess( Integer a, short b ){ return a <= b; }
    @FnName("<=") public static Boolean eqOrLess( Integer a, Short b ){ return a <= b; }
    @FnName("<=") public static Boolean eqOrLess( Integer a, int b ){ return a <= b; }
    @FnName("<=") public static Boolean eqOrLess( Integer a, Integer b ){ return a <= b; }
    @FnName("<=") public static Boolean eqOrLess( Integer a, long b ){ return a <= b; }
    @FnName("<=") public static Boolean eqOrLess( Integer a, Long b ){ return a <= b; }
    @FnName("<=") public static Boolean eqOrLess( Integer a, float b ){ return a <= b; }
    @FnName("<=") public static Boolean eqOrLess( Integer a, Float b ){ return a <= b; }
    @FnName("<=") public static Boolean eqOrLess( Integer a, double b ){ return a <= b; }
    @FnName("<=") public static Boolean eqOrLess( Integer a, Double b ){ return a <= b; }
    @FnName(">=") public static Boolean eqOrMore( Integer a, byte b ){ return a >= b; }
    @FnName(">=") public static Boolean eqOrMore( Integer a, Byte b ){ return a >= b; }
    @FnName(">=") public static Boolean eqOrMore( Integer a, short b ){ return a >= b; }
    @FnName(">=") public static Boolean eqOrMore( Integer a, Short b ){ return a >= b; }
    @FnName(">=") public static Boolean eqOrMore( Integer a, int b ){ return a >= b; }
    @FnName(">=") public static Boolean eqOrMore( Integer a, Integer b ){ return a >= b; }
    @FnName(">=") public static Boolean eqOrMore( Integer a, long b ){ return a >= b; }
    @FnName(">=") public static Boolean eqOrMore( Integer a, Long b ){ return a >= b; }
    @FnName(">=") public static Boolean eqOrMore( Integer a, float b ){ return a >= b; }
    @FnName(">=") public static Boolean eqOrMore( Integer a, Float b ){ return a >= b; }
    @FnName(">=") public static Boolean eqOrMore( Integer a, double b ){ return a >= b; }
    @FnName(">=") public static Boolean eqOrMore( Integer a, Double b ){ return a >= b; }
    @FnName(">") public static Boolean more( Integer a, byte b ){ return a > b; }
    @FnName(">") public static Boolean more( Integer a, Byte b ){ return a > b; }
    @FnName(">") public static Boolean more( Integer a, short b ){ return a > b; }
    @FnName(">") public static Boolean more( Integer a, Short b ){ return a > b; }
    @FnName(">") public static Boolean more( Integer a, int b ){ return a > b; }
    @FnName(">") public static Boolean more( Integer a, Integer b ){ return a > b; }
    @FnName(">") public static Boolean more( Integer a, long b ){ return a > b; }
    @FnName(">") public static Boolean more( Integer a, Long b ){ return a > b; }
    @FnName(">") public static Boolean more( Integer a, float b ){ return a > b; }
    @FnName(">") public static Boolean more( Integer a, Float b ){ return a > b; }
    @FnName(">") public static Boolean more( Integer a, double b ){ return a > b; }
    @FnName(">") public static Boolean more( Integer a, Double b ){ return a > b; }
}
