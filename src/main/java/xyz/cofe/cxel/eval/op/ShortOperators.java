package xyz.cofe.cxel.eval.op;

import xyz.cofe.cxel.eval.FnName;

import java.util.Objects;

/**
 * Операции над целыми числами
 */
public class ShortOperators {
    @FnName("+") public static short add( short a, byte b ){ return (short)(a + b); }
    @FnName("+") public static short add( short a, Byte b ){ return (short)(a + b); }
    @FnName("+") public static short add( short a, short b ){ return (short)(a + b); }
    @FnName("+") public static Short add( short a, Short b ){ return (Short)(short)(a + b); }
    @FnName("+") public static int add( short a, int b ){ return (int)(a + b); }
    @FnName("+") public static Integer add( short a, Integer b ){ return (Integer)(a + b); }
    @FnName("+") public static long add( short a, long b ){ return (long)(a + b); }
    @FnName("+") public static Long add( short a, Long b ){ return (Long)(a + b); }
    @FnName("+") public static float add( short a, float b ){ return (float)(a + b); }
    @FnName("+") public static Float add( short a, Float b ){ return (Float)(a + b); }
    @FnName("+") public static double add( short a, double b ){ return (double)(a + b); }
    @FnName("+") public static Double add( short a, Double b ){ return (Double)(a + b); }
    @FnName("+") public static Short add( Short a, byte b ){ return (Short)(short)(a + b); }
    @FnName("+") public static Short add( Short a, Byte b ){ return (Short)(short)(a + b); }
    @FnName("+") public static Short add( Short a, short b ){ return (Short)(short)(a + b); }
    @FnName("+") public static Short add( Short a, Short b ){ return (Short)(short)(a + b); }
    @FnName("+") public static int add( Short a, int b ){ return (int)(a + b); }
    @FnName("+") public static Integer add( Short a, Integer b ){ return (Integer)(a + b); }
    @FnName("+") public static long add( Short a, long b ){ return (long)(a + b); }
    @FnName("+") public static Long add( Short a, Long b ){ return (Long)(a + b); }
    @FnName("+") public static float add( Short a, float b ){ return (float)(a + b); }
    @FnName("+") public static Float add( Short a, Float b ){ return (Float)(a + b); }
    @FnName("+") public static double add( Short a, double b ){ return (double)(a + b); }
    @FnName("+") public static Double add( Short a, Double b ){ return (Double)(a + b); }
    @FnName("-") public static short sub( short a, byte b ){ return (short)(a - b); }
    @FnName("-") public static short sub( short a, Byte b ){ return (short)(a - b); }
    @FnName("-") public static short sub( short a, short b ){ return (short)(a - b); }
    @FnName("-") public static Short sub( short a, Short b ){ return (Short)(short)(a - b); }
    @FnName("-") public static int sub( short a, int b ){ return (int)(a - b); }
    @FnName("-") public static Integer sub( short a, Integer b ){ return (Integer)(a - b); }
    @FnName("-") public static long sub( short a, long b ){ return (long)(a - b); }
    @FnName("-") public static Long sub( short a, Long b ){ return (Long)(a - b); }
    @FnName("-") public static float sub( short a, float b ){ return (float)(a - b); }
    @FnName("-") public static Float sub( short a, Float b ){ return (Float)(a - b); }
    @FnName("-") public static double sub( short a, double b ){ return (double)(a - b); }
    @FnName("-") public static Double sub( short a, Double b ){ return (Double)(a - b); }
    @FnName("-") public static Short sub( Short a, byte b ){ return (Short)(short)(a - b); }
    @FnName("-") public static Short sub( Short a, Byte b ){ return (Short)(short)(a - b); }
    @FnName("-") public static Short sub( Short a, short b ){ return (Short)(short)(a - b); }
    @FnName("-") public static Short sub( Short a, Short b ){ return (Short)(short)(a - b); }
    @FnName("-") public static int sub( Short a, int b ){ return (int)(a - b); }
    @FnName("-") public static Integer sub( Short a, Integer b ){ return (Integer)(a - b); }
    @FnName("-") public static long sub( Short a, long b ){ return (long)(a - b); }
    @FnName("-") public static Long sub( Short a, Long b ){ return (Long)(a - b); }
    @FnName("-") public static float sub( Short a, float b ){ return (float)(a - b); }
    @FnName("-") public static Float sub( Short a, Float b ){ return (Float)(a - b); }
    @FnName("-") public static double sub( Short a, double b ){ return (double)(a - b); }
    @FnName("-") public static Double sub( Short a, Double b ){ return (Double)(a - b); }
    @FnName("*") public static short mul( short a, byte b ){ return (short)(a * b); }
    @FnName("*") public static short mul( short a, Byte b ){ return (short)(a * b); }
    @FnName("*") public static short mul( short a, short b ){ return (short)(a * b); }
    @FnName("*") public static Short mul( short a, Short b ){ return (Short)(short)(a * b); }
    @FnName("*") public static int mul( short a, int b ){ return (int)(a * b); }
    @FnName("*") public static Integer mul( short a, Integer b ){ return (Integer)(a * b); }
    @FnName("*") public static long mul( short a, long b ){ return (long)(a * b); }
    @FnName("*") public static Long mul( short a, Long b ){ return (Long)(a * b); }
    @FnName("*") public static float mul( short a, float b ){ return (float)(a * b); }
    @FnName("*") public static Float mul( short a, Float b ){ return (Float)(a * b); }
    @FnName("*") public static double mul( short a, double b ){ return (double)(a * b); }
    @FnName("*") public static Double mul( short a, Double b ){ return (Double)(a * b); }
    @FnName("*") public static Short mul( Short a, byte b ){ return (Short)(short)(a * b); }
    @FnName("*") public static Short mul( Short a, Byte b ){ return (Short)(short)(a * b); }
    @FnName("*") public static Short mul( Short a, short b ){ return (Short)(short)(a * b); }
    @FnName("*") public static Short mul( Short a, Short b ){ return (Short)(short)(a * b); }
    @FnName("*") public static int mul( Short a, int b ){ return (int)(a * b); }
    @FnName("*") public static Integer mul( Short a, Integer b ){ return (Integer)(a * b); }
    @FnName("*") public static long mul( Short a, long b ){ return (long)(a * b); }
    @FnName("*") public static Long mul( Short a, Long b ){ return (Long)(a * b); }
    @FnName("*") public static float mul( Short a, float b ){ return (float)(a * b); }
    @FnName("*") public static Float mul( Short a, Float b ){ return (Float)(a * b); }
    @FnName("*") public static double mul( Short a, double b ){ return (double)(a * b); }
    @FnName("*") public static Double mul( Short a, Double b ){ return (Double)(a * b); }
    @FnName("/") public static short div( short a, byte b ){ return (short)(a / b); }
    @FnName("/") public static short div( short a, Byte b ){ return (short)(a / b); }
    @FnName("/") public static short div( short a, short b ){ return (short)(a / b); }
    @FnName("/") public static Short div( short a, Short b ){ return (Short)(short)(a / b); }
    @FnName("/") public static int div( short a, int b ){ return (int)(a / b); }
    @FnName("/") public static Integer div( short a, Integer b ){ return (Integer)(a / b); }
    @FnName("/") public static long div( short a, long b ){ return (long)(a / b); }
    @FnName("/") public static Long div( short a, Long b ){ return (Long)(a / b); }
    @FnName("/") public static float div( short a, float b ){ return (float)(a / b); }
    @FnName("/") public static Float div( short a, Float b ){ return (Float)(a / b); }
    @FnName("/") public static double div( short a, double b ){ return (double)(a / b); }
    @FnName("/") public static Double div( short a, Double b ){ return (Double)(a / b); }
    @FnName("/") public static Short div( Short a, byte b ){ return (Short)(short)(a / b); }
    @FnName("/") public static Short div( Short a, Byte b ){ return (Short)(short)(a / b); }
    @FnName("/") public static Short div( Short a, short b ){ return (Short)(short)(a / b); }
    @FnName("/") public static Short div( Short a, Short b ){ return (Short)(short)(a / b); }
    @FnName("/") public static int div( Short a, int b ){ return (int)(a / b); }
    @FnName("/") public static Integer div( Short a, Integer b ){ return (Integer)(a / b); }
    @FnName("/") public static long div( Short a, long b ){ return (long)(a / b); }
    @FnName("/") public static Long div( Short a, Long b ){ return (Long)(a / b); }
    @FnName("/") public static float div( Short a, float b ){ return (float)(a / b); }
    @FnName("/") public static Float div( Short a, Float b ){ return (Float)(a / b); }
    @FnName("/") public static double div( Short a, double b ){ return (double)(a / b); }
    @FnName("/") public static Double div( Short a, Double b ){ return (Double)(a / b); }

    @FnName("<") public static Boolean less( Short a, byte b ){ return a < b; }
    @FnName("<") public static Boolean less( Short a, Byte b ){ return a < b; }
    @FnName("<") public static Boolean less( Short a, short b ){ return a < b; }
    @FnName("<") public static Boolean less( Short a, Short b ){ return a < b; }
    @FnName("<") public static Boolean less( Short a, int b ){ return a < b; }
    @FnName("<") public static Boolean less( Short a, Integer b ){ return a < b; }
    @FnName("<") public static Boolean less( Short a, long b ){ return a < b; }
    @FnName("<") public static Boolean less( Short a, Long b ){ return a < b; }
    @FnName("<") public static Boolean less( Short a, float b ){ return a < b; }
    @FnName("<") public static Boolean less( Short a, Float b ){ return a < b; }
    @FnName("<") public static Boolean less( Short a, double b ){ return a < b; }
    @FnName("<") public static Boolean less( Short a, Double b ){ return a < b; }
    @FnName("<=") public static Boolean eqOrLess( Short a, byte b ){ return a <= b; }
    @FnName("<=") public static Boolean eqOrLess( Short a, Byte b ){ return a <= b; }
    @FnName("<=") public static Boolean eqOrLess( Short a, short b ){ return a <= b; }
    @FnName("<=") public static Boolean eqOrLess( Short a, Short b ){ return a <= b; }
    @FnName("<=") public static Boolean eqOrLess( Short a, int b ){ return a <= b; }
    @FnName("<=") public static Boolean eqOrLess( Short a, Integer b ){ return a <= b; }
    @FnName("<=") public static Boolean eqOrLess( Short a, long b ){ return a <= b; }
    @FnName("<=") public static Boolean eqOrLess( Short a, Long b ){ return a <= b; }
    @FnName("<=") public static Boolean eqOrLess( Short a, float b ){ return a <= b; }
    @FnName("<=") public static Boolean eqOrLess( Short a, Float b ){ return a <= b; }
    @FnName("<=") public static Boolean eqOrLess( Short a, double b ){ return a <= b; }
    @FnName("<=") public static Boolean eqOrLess( Short a, Double b ){ return a <= b; }
    @FnName(">=") public static Boolean eqOrMore( Short a, byte b ){ return a >= b; }
    @FnName(">=") public static Boolean eqOrMore( Short a, Byte b ){ return a >= b; }
    @FnName(">=") public static Boolean eqOrMore( Short a, short b ){ return a >= b; }
    @FnName(">=") public static Boolean eqOrMore( Short a, Short b ){ return a >= b; }
    @FnName(">=") public static Boolean eqOrMore( Short a, int b ){ return a >= b; }
    @FnName(">=") public static Boolean eqOrMore( Short a, Integer b ){ return a >= b; }
    @FnName(">=") public static Boolean eqOrMore( Short a, long b ){ return a >= b; }
    @FnName(">=") public static Boolean eqOrMore( Short a, Long b ){ return a >= b; }
    @FnName(">=") public static Boolean eqOrMore( Short a, float b ){ return a >= b; }
    @FnName(">=") public static Boolean eqOrMore( Short a, Float b ){ return a >= b; }
    @FnName(">=") public static Boolean eqOrMore( Short a, double b ){ return a >= b; }
    @FnName(">=") public static Boolean eqOrMore( Short a, Double b ){ return a >= b; }
    @FnName(">") public static Boolean more( Short a, byte b ){ return a > b; }
    @FnName(">") public static Boolean more( Short a, Byte b ){ return a > b; }
    @FnName(">") public static Boolean more( Short a, short b ){ return a > b; }
    @FnName(">") public static Boolean more( Short a, Short b ){ return a > b; }
    @FnName(">") public static Boolean more( Short a, int b ){ return a > b; }
    @FnName(">") public static Boolean more( Short a, Integer b ){ return a > b; }
    @FnName(">") public static Boolean more( Short a, long b ){ return a > b; }
    @FnName(">") public static Boolean more( Short a, Long b ){ return a > b; }
    @FnName(">") public static Boolean more( Short a, float b ){ return a > b; }
    @FnName(">") public static Boolean more( Short a, Float b ){ return a > b; }
    @FnName(">") public static Boolean more( Short a, double b ){ return a > b; }
    @FnName(">") public static Boolean more( Short a, Double b ){ return a > b; }
}
